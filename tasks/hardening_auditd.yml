---
- name: HARDENING | AUDITD | Enable auditd service
  service:
    name: auditd
    enabled: true

- name: HARDENING | AUDITD | Configure
  lineinfile:
    dest: /etc/audit/auditd.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regexp: '^(#)?disk_error_action[\s]*=', line: 'disk_error_action = halt'}
    - { regexp: '^(#)?disk_full_action[\s]*=', line: 'disk_full_action = halt'}
    # Halt the computer if only 75MB is left on disk
    - { regexp: '^(#)?space_left[\s]*=', line: 'space_left = 75'}
    - { regexp: '^(#)?space_left_action[\s]*=', line: 'space_left_action = halt'}
    - { regexp: '^(#)?admin_space_left_action[\s]*=', line: 'admin_space_left_action = halt'}
  notify:
    - start auditd

- name: HARDENING | AUDITD | Forward auditd records to syslog
  lineinfile:
    dest: /etc/audisp/plugins.d/syslog.conf
    regexp: "^(#)?active"
    line: "active = yes"
    state: present

- name: HARDENING | AUDITD | Add rules
  template:
    src:  audit.rules.j2
    dest: /etc/audit/rules.d/audit.rules
  notify:
    - start auditd

- name: HARDENING | AUDITD | Find all setuid/setgid applications
  shell: find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null
  changed_when: false
  register: found_setuid_bins
  notify:
    - start auditd

- name: HARDENING | AUDITD | Monitor all setuid/setgid applications
  lineinfile:
    dest: /etc/audit/rules.d/audit.rules
    line: "-a always,exit -F path={{ item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -k privileged"
    regexp: '^\-a\s+always,exit\s+\-F\s+path={{ item }}\s+\-F\s+perm=x\s+\-F\s+auid>=1000\s+\-F\s+auid!=4294967295\s+\-k\s+privileged\s*$'
    state: present
  with_items: "{{ found_setuid_bins.stdout_lines }}"
  notify:
    - start auditd
